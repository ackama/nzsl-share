<%#
# Collection

This partial is used on the `index` and `show` pages
to display a collection of resources in an HTML table.

## Local variables:

- `collection_presenter`:
  An instance of [Administrate::Page::Collection][1].
  The table presenter uses `ResourceDashboard::COLLECTION_ATTRIBUTES` to determine
  the columns displayed in the table
- `resources`:
  An ActiveModel::Relation collection of resources to be displayed in the table.
  By default, the number of resources is limited by pagination
  or by a hard limit to prevent excessive page load times

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<table aria-labelledby="<%= table_title %>">
  <thead>
    <tr>
      <% collection_presenter.attribute_types.each do |attr_name, attr_type| %>
        <th class="cell-label
        cell-label--<%= attr_type.html_class %>
        cell-label--<%= collection_presenter.ordered_html_class(attr_name) %>"
        scope="col"
        role="columnheader"
        aria-sort="<%= sort_order(collection_presenter.ordered_html_class(attr_name)) %>">
        <%= link_to(sanitized_order_params(page, collection_field_name).merge(
          collection_presenter.order_params_for(attr_name, key: collection_field_name)
        )) do %>
          <%= t(
            "helpers.label.#{collection_presenter.resource_name}.#{attr_name}",
            default: attr_name.to_s,
          ).titleize %>
          <% if collection_presenter.ordered_by?(attr_name) %>
            <span class="cell-label__sort-indicator cell-label__sort-indicator--<%= collection_presenter.ordered_html_class(attr_name) %>">
              <%= inline_svg_pack_tag "static/images/dropdown.svg", class: "icon--small" %>
            </span>
          <% end %>
        <% end %>
        </th>
      <% end %>
      <th></th>
    </tr>
  </thead>

  <tbody>
    <% present_collection(resources).each do |resource| %>
      <tr class="<%= "js-table-row table-row--#{resource.status}" %>"
          tabindex="0"
          >
        <% collection_presenter.attributes_for(resource).each do |attribute| %>
          <td class="cell-data cell-data--<%= attribute.html_class %>">
            <% if authorized_action?(resource, :show) -%>
              <%= link_to sign_path(resource) do %>
                <% begin %>
                  <%= render "admin/signs/cell/#{attribute.name}", resource: resource %>
                <% rescue ActionView::MissingTemplate%>
                  <%= render_field attribute %>
                <% end %>
              <% end %>
            <% end -%>
          </td>
        <% end %>
        <td class="admin-icons">
          <button title="Options" class="button clear" data-toggle="<%= dom_id(resource, :options) %>">
            <%= inline_svg_pack_tag "static/images/options.svg", class: "icon--medium list__item__icon" %>
          </button>
        </td>
      </tr>
      <div class="list__item-menu__dropdown-pane list__item-menu__dropdown-pane--admin" id="<%= dom_id(resource, :options) %>" data-position="bottom" data-alignment="right" data-dropdown data-hover="true" data-hover-pane="true">
            <ul class="list__item-menu vertical icons">
              <li class="list__item-menu__menu-item">
                <%= link_to edit_sign_path(resource) do %>
                  <%= inline_svg_pack_tag "static/images/edit.svg" %><span>Edit</span>
                <% end %>
              </li>
              <% if policy(resource).unpublish? %>
                <li class="list__item-menu__menu-item">
                  <%= link_to unpublish_sign_path(resource), method: :patch,
                      data: { confirm: t("admin.sign_workflow.unpublish.confirm") } do %>
                      <%= inline_svg_pack_tag "static/images/archive.svg", class: "icon--medium" %><span>Unpublish</span>
                  <% end %>
                </li>
              <% elsif existing_action?(collection_presenter.resource_name, :destroy) %>
                <li class="list__item-menu__menu-item">
                  <%= link_to sign_path(resource), method: :delete, data: { confirm: t("administrate.actions.confirm") } do %>
                    <%= inline_svg_pack_tag "static/images/archive.svg", class: "icon--medium" %><span>Destroy</span>
                  <% end if accessible_action?(resource, :destroy) %>
                </li>
              <% end %>
            </ul>
          </div>
    <% end %>
  </tbody>
</table>
