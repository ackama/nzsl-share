
<div class="grid-x grid-margin-x content-container">
  <%= form_with model: @sign, url: sign_path(@sign), local: true, class: "cell form", method: :patch do |f| %>
    <h1 class="">Edit sign details</h1>
    <hr class="form__divider"/>

    <div class="row align-middle small-12 js-sign-video-container">
      <div class="small-12 medium-6"><%= render "signs/card/video", sign: @sign %></div>
      <b class="small-12 medium-6"><%=@sign.word %></b>
    </div>

    <fieldset class="content-container">
      <%= f.label :word, "Sign / word:", class: "required" %>
      <%= f.text_field :word, class: (@sign.errors[:word].any? && "invalid") %>
      <% if @sign.errors[:word].any? %>
        <% @sign.errors[:word].each do |message| %>
          <div class="form-error show"><%= message %></div>
        <% end %>
      <% end %>
    </fieldset>
    <fieldset>
      <%= f.label :secondary, "Other words for this sign:" %>
      <%= f.text_field :secondary, class: (@sign.errors[:secondary].any? && "invalid") %>
    </fieldset>
    <fieldset>
      <%= f.label :maori, "Māori translation:" %>
      <%= f.text_field :maori, class: (@sign.errors[:maori].any? && "invalid") %>
    </fieldset>
    <fieldset>
      <%= f.label :topic_id, "Topic:" %>
      <%= f.collection_select :topic_id, Topic.all, :id, :name %>
    </fieldset>
    <fieldset>
      <%= f.label :notes, "Notes (e.g. where have you seen the sign used?):" %>
      <%= f.text_area :notes, rows: 5, class: (@sign.errors[:notes].any? && "invalid") %>
    </fieldset>
    <br/>
    <h2 class="">Public</h2>
    <hr class="form__divider"/>
    <br/>
    <%= label :should_submit_for_publishing, "Do you want your sign to be public?" do %>
      <span>
        <h3>Do you want your sign to be public?</h3>
        <p> Your sign will go through a validation process with our NZSL Share moderators before it is published. </p>
      </span>
    <% end %>
    <br/>
    <fieldset>
    <%= radio_button_tag(:should_submit_for_publishing, "true", !!@sign.sign_submitted_to_publish?) %>
      <%= label_tag(:should_submit_for_publishing_true, "Yes, request my sign be public") %>
    </fieldset>
    <br/>
    <fieldset>
    <%= radio_button_tag(:should_submit_for_publishing, "false", !!@sign.personal?) %>
      <%= label_tag(:should_submit_for_publishing_false, "No, keep my sign private") %>
    </fieldset>
    <br/>
    <hr class="form__divider"/>
    <div class="grid-x align-right form__buttons">
      <%= link_to "Cancel", sign_path(@sign), class: "button clear form__buttons--cancel" %>
      <%= f.submit class: "button royal primary" %>
    </div>
  <% end %>
</div>

<% unless @sign.fully_processed? %>
  <%= javascript_tag defer: "defer", nonce: true do %>
    var selector = ".js-sign-video-container";
    var updateInterval = <%= Rails.env.test? ? 500 : 5000 %>; // ms
    var intervalId

    function refresh() {
      var $currentContainer = jQuery(selector);
      var $currentVideo = $currentContainer.find("video.sign-video");
      jQuery.ajax( {
        url: window.location,
        dataType: "html"
      }).done(function(responseText) {
        var $newVideoContainer = jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector);
        var $newVideo = $newVideoContainer.find("video.sign-video");

        // Stop polling once the video has been processed
        if ($newVideo.hasClass("has-video")) clearInterval(intervalId);

        // Only refresh the HTML of the element if the classes of the video have changed
        if ($newVideo.get(0).classList.value !== $currentVideo.get(0).classList.value) {
          $currentContainer.html($newVideoContainer.html());
        }
      });
    }

    jQuery(function() {
      intervalId = setInterval(refresh, updateInterval);
    });
  <% end %>
<% end %>
