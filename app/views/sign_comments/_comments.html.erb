<% return unless policy(@sign).display_comments? %>

<div id="sign-comments">
  <div class="grid-x">
    <div class="cell auto sign-comments--heading">
      <%= form_with url: params.to_unsafe_h, method: :get, remote: false, class: "comment-select" do |f| %>
        <%= f.label :comments_in_folder, "Comments for " %>
        <%= f.select :comments_in_folder,
                     options_for_select(
                       (@sign.published? || @sign.unpublish_requested? ? [["Public", nil]] : []) +\
                       policy_scope(@sign.folders).map { |f| [f.title, f.id] },
                       params[:comments_in_folder]
                     ),
                     {},
                     class: "comment-select",
                     onchange: "this.form.submit()" %>
      <% end %>
    </div>
    <div class="cell shrink sign-comments--total">
      <% comment_total = @comments.unscope(:limit, :offset).count %>
      showing <%= comment_total %> of <%= comment_total %> comments
    </div>
  </div>

  <% unless @comments.blank? %>
    <hr class="sign-comments__divider">
  <% end %>
  <%= render "sign_comments/pagination_prev" %>
  <%= render "sign_comments/comments_list" %>

  <%= content_tag(:div, class: "text-center show-if-no-js") do %>
    <%= link_to params.to_unsafe_h.merge(anchor: "sign-comments", comments_page: @comments.prev_page),
                class: "button clear" do %>
      <%= inline_svg "media/images/dropdown.svg", class: "margin-right-1" %>
      Show newer comments
    <% end %>
  <% end unless @comments.first_page? %>


  <%= render "sign_comments/new", sign: sign if policy(@sign).show_comment_element? %>
</div>
