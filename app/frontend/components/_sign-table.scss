.sign-table {
  display: grid;

  // Apply the grid to the whole table. This allows headings and columns to line up,
  // but basically wacks each cell into a single list, which means that ordering applies
  // across the whole list, not the 'row'
  @include breakpoint(large up) {
    // Reset table elements to be stylable as a grid
    thead, tbody, tr {
      display: contents;
    }

    grid-template-columns:
        [checkbox-start] max-content // Checkbox
        [checkbox-end content-start] max-content // Image
        1fr // Titles
        max-content // Status
        max-content // Contributor
        1fr // Activity
        max-content [content-end]; // Controls
  }

  // Apply the grid to each table row. This makes each 'row'
  // it's own grid context, allowing for spacing and ordering within
  // the row, but prevents headings from lining up against the table since
  // min-content etc doesn't calculate correctly
  @include breakpoint(medium down) {
    tbody > tr {
      border-bottom: solid 1px $light-neutral-gray;
      margin: 1.4rem 0;
      padding-bottom: 1.4rem;

      display: grid;
      grid-template-columns:
        [checkbox-start] max-content // Checkbox
        [checkbox-end content-start] max-content // Image
        1fr // Titles
        max-content // Status
        max-content // Contributor
        1fr // Activity
        max-content [content-end]; // Controls
    }
  }

  a {
    text-decoration: none;
  }

  &__cell, &__column-heading {
    @include breakpoint(large up) {
      border-bottom: solid 1px $light-neutral-gray;
      padding: 1.5rem 1rem;

      &:first-child {
        padding-left: 2rem;
      }

      &:last-child {
        padding-right: 2rem;
      }
    }
  }

  &__column-heading {
    font-weight: 600;
    font-size: 0.825rem;
    color: $neutral-gray;
    padding-bottom: 0.5rem;
    display: none;

    // Space elements across a grid
    @include breakpoint(large up) {
      display: block;

      // The first and last cells are stretched across two columns:
      &:first-child, &:last-child {
        grid-column-end: span 2;
      }
    }
  }

  &__cell {
    display: flex;
    flex-direction: column;
    justify-content: center;

    @include breakpoint(medium down) {
      &:first-child {
        justify-content: flex-start;
      }

      &:not(:first-child) {
        grid-column: content-start / content-end;
        margin-right: 4rem;
        padding: 0.75rem 0;
      }
    }
  }

  &__image {
    border-radius: rem-calc(4);

    @include breakpoint(large up) {
      max-width: 60px;
      max-height: 100px;
    }
  }

  &__titles {
    @include breakpoint(medium down) {
      grid-row: 1;
    }
  }

  &__title {
    color: get-color(royal);
    font-size: 1.2rem;
    line-height: $header-lineheight;
    font-weight: bold;
  }

  &__subtitle {
    font-weight: 400;
    color: $neutral-gray;
    font-size: 1rem;
  }

  &__status {
    text-transform: uppercase;
    color: get-color(primary);
    font-weight: 600;
    background: get-color(primary-light);
    padding: 0.25rem 0.375rem;
    border-radius: rem-calc(2);
    width: fit-content;
  }

  &__contributor {
    color: inherit;
    font-weight: normal;
    text-decoration: none;

    &:hover {
      color: get-color(royal);
      text-decoration: underline;
    }
  }

  &__controls {
    align-items: center;
    flex-direction: row;
    justify-content: space-between;
  }

  &__controls {
    &--agree,
    &--disagree,
    &--comments {
      color: get-color(medium) !important;
      display: inline-flex;
      text-decoration: none;
      margin-right: 0.625rem;
    }
  }
}
